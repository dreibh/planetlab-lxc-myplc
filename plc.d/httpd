#!/bin/bash
#
# priority: 700
#
# Configure Apache web server
#
# Mark Huang <mlhuang@cs.princeton.edu>
# Copyright (C) 2006 The Trustees of Princeton University
#
# $Id$
#

# Source function library and configuration
. /etc/plc.d/functions
. /etc/planetlab/plc_config

# Be verbose
set -x

# Default locations
DocumentRoot=/var/www/html
php_ini=/etc/php.ini
httpd_conf=/etc/httpd/conf/httpd.conf
ssl_conf=/etc/httpd/conf.d/ssl.conf
plc_conf=/etc/httpd/conf.d/plc.conf

function disable_file () {
    file=$1; shift
    [ -f $file ] && mv -f $file $file.disabled
}
function enable_file () {
    file=$1; shift
    [ ! -f $file ] && mv -f $file.disabled $file
}

case "$1" in
    start)
	if [ "$PLC_API_ENABLED" != "1" -a \
	     "$PLC_BOOT_ENABLED" != "1" -a \
	     "$PLC_WWW_ENABLED" != "1" ] ; then
	    exit 0
	fi

	MESSAGE=$"Starting web server"
	dialog "$MESSAGE"

	# set document root - not really useful on fedora but just in case
	sed -i -e "s@^DocumentRoot.*@DocumentRoot \"$DocumentRoot\"@" $httpd_conf
	# whether WWW is enabled or not : 
	if [ "$PLC_WWW_ENABLED" != "1" ] ; then
	    # avoid hitting drupal, that would try to connect to the db and create noise
	    disable_file $DocumentRoot/index.php
	else
	    enable_file $DocumentRoot/index.php
	fi

	# Set the default include path
	include_path=".:$DocumentRoot/planetlab/includes:$DocumentRoot/plekit/php:$DocumentRoot/generated:/etc/planetlab/php:/usr/share/plc_api/php"
	sed -i -e "s@[;]*include_path = \"\.:.*\"@include_path = \"$include_path\"@" $php_ini

	# Disable default Listen directive
	sed -i -e '/^Listen/d' $httpd_conf

	# Set the port numbers
	for server in WWW API BOOT ; do
	    enabled=PLC_${server}_ENABLED
	    if [ "${!enabled}" != "1" ] ; then
		continue
	    fi
	    hostname=PLC_${server}_HOST
	    http_port=PLC_${server}_PORT
	    https_port=PLC_${server}_SSL_PORT

	    # API should always be accessed via SSL
	    if [ "$server" = "API" ] ; then
		https_port=${!http_port}
		http_port=
	    fi

	    # Check if we are already listening on these ports
	    skip_http=0
	    skip_https=0
	    for previous_server in WWW API BOOT ; do
		if [ "$server" = "$previous_server" ] ; then
		    break
		fi
		previous_enabled=PLC_${previous_server}_ENABLED
		if [ "${!previous_enabled}" != "1" ] ; then
		    continue
		fi
		previous_http_port=PLC_${previous_server}_PORT
		previous_https_port=PLC_${previous_server}_SSL_PORT

		if [ "${!http_port}" = "${!previous_http_port}" ] ; then
		    skip_http=1
		fi
		if [ "${!https_port}" = "${!previous_https_port}" ] ; then
		    skip_https=1
		fi
	    done

	    # HTTP configuration
	    if [ $skip_http -eq 0 -a -n "${!http_port}" ] ; then
		cat <<EOF
Listen ${!http_port}
# Make sure that the admin web pages and API are always accessed via SSL
<VirtualHost *:${!http_port}>
    Redirect /db https://$PLC_WWW_HOST:$PLC_WWW_SSL_PORT/db
    Redirect /planetlab https://$PLC_WWW_HOST:$PLC_WWW_SSL_PORT/planetlab
    Redirect /$PLC_API_PATH https://$PLC_API_HOST:$PLC_API_PORT/$PLC_API_PATH
</VirtualHost>
EOF
	    fi

	    # HTTPS configuration
	    if [ $skip_https -eq 0 -a -n "${!https_port}" ] ; then
		# XXX Cannot support NameVirtualHost over SSL. If
		# the API, boot, and web servers are all running
		# on the same machine, the web server certificate
		# takes precedence.
		sed -i \
		    -e "s/^Listen .*/Listen ${!https_port}/" \
		    -e "s/<VirtualHost _default_:.*>/<VirtualHost _default_:${!https_port}>/" \
		    $ssl_conf
	    fi
	done >$plc_conf

	# Set custom Apache directives
	(
	    if [ "$PLC_API_ENABLED" = "1" ] ; then
		cat <<EOF
<Location $PLC_API_PATH>
    SetHandler mod_python
    PythonPath "sys.path + ['/usr/share/plc_api']"
    PythonHandler ModPython
</Location>
EOF
	    else
		cat <<EOF
<Location $PLC_API_PATH>
    Deny from all
</Location>
EOF
	    fi

	    if [ "$PLC_WWW_ENABLED" != "1" ] ; then
		cat <<EOF
Redirect /index.html http://$PLC_WWW_HOST:$PLC_WWW_PORT/
EOF
	    fi
	    cat <<EOF
AddType application/octet-stream .iso
AddType application/octet-stream .usb
EOF
	) >>$plc_conf

	# Make alpina-logs directory writable for bootmanager log upload
	chown apache:apache $DocumentRoot/alpina-logs/nodes

	# Make the Drupal files upload directory owned by Apache
	mkdir -p $DocumentRoot/files
	chown apache:apache $DocumentRoot/files

	# Symlink any (real) files or directories in
	# /data/var/www/html/* to /var/www/html/. We could descend
	# into subdirectories, but the code to do so properly would be
	# madness.
	for file in /data/$DocumentRoot/* ; do
	    if [ -e "$file" -a ! -h "$file" ] ; then
		base=$(basename "$file")
		if [ ! -e "$DocumentRoot/$base" ] ; then
		    ln -nsf "$file" "$DocumentRoot/$base"
		fi
	    fi
	done

	# Cleanup broken symlinks
	for file in $DocumentRoot/* ; do
	    if [ -h "$file" -a ! -e "$file" ] ; then
		rm -f "$file"
	    fi
	done

	# Old style PHP constants
	mkdir -p /etc/planetlab/php
	cat >/etc/planetlab/php/site_constants.php <<"EOF"
<?php
include('plc_config.php');

define('PL_API_SERVER', PLC_API_HOST);
define('PL_API_PATH', PLC_API_PATH);
define('PL_API_PORT', PLC_API_PORT);
define('PL_API_CAPABILITY_AUTH_METHOD', 'capability');
define('PL_API_CAPABILITY_PASS', PLC_API_MAINTENANCE_PASSWORD);
define('PL_API_CAPABILITY_USERNAME', PLC_API_MAINTENANCE_USER);
define('WWW_BASE', PLC_WWW_HOST);
define('BOOT_BASE', PLC_BOOT_HOST);
define('DEBUG', PLC_WWW_DEBUG);
define('API_CALL_DEBUG', PLC_API_DEBUG);
define('SENDMAIL', PLC_MAIL_ENABLED);
define('PLANETLAB_SUPPORT_EMAIL', PLC_NAME . ' Support <' . PLC_MAIL_SUPPORT_ADDRESS . '>');
define('PLANETLAB_SUPPORT_EMAIL_ONLY', PLC_MAIL_SUPPORT_ADDRESS);
?>
EOF

	## patch php.ini
	# memory limit
	sed -i -e 's,^memory_limit = 32M *;,memory_limit = 80M ; patch myplc -- ,' $php_ini 
	# log_errors : is On by default
	# error_log
	if ! grep '^error_log *=' $php_ini > /dev/null ; then
	  echo 'error_log = /var/log/php.log' >> $php_ini
	  touch /var/log/php.log
	  chmod 666 /var/log/php.log
	fi

	plc_daemon httpd
	check

	result "$MESSAGE"
	;;

    stop)
	MESSAGE=$"Stopping web server"
	dialog "$MESSAGE"

	killproc plc_httpd
	check

	result "$MESSAGE"
	;;
esac

exit $ERRORS
