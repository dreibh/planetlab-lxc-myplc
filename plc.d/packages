#!/bin/bash
#
# priority: 1200
#
# Update node package repository metadata and sign packages
#
# Mark Huang <mlhuang@cs.princeton.edu>
# Copyright (C) 2006 The Trustees of Princeton University
#
# $Id: packages,v 1.5 2007/01/30 15:09:22 thierry Exp $
#

# Source function library and configuration
. /etc/plc.d/functions
. /etc/planetlab/plc_config

# Be verbose
set -x

case "$1" in
    start)
	MESSAGE=$"Signing and indexing node packages"
	dialog "$MESSAGE"

	shopt -s nullglob

	shift
	if [[ -z "$@" ]] ; then
	    # use all subdirs in install-rpms by default
	    repositories=/var/www/html/install-rpms/*
	else
	    # else use argv
	    repositories=$@
	fi

	for repository in $repositories ; do
            # Sign all RPMS. setsid detaches rpm from the terminal,
            # allowing the (hopefully blank) GPG password to be
            # entered from stdin instead of /dev/tty.
	    packages=
	    stamps=
	    # create a stamp once the package gets signed
	    mkdir $repository/signed-stamps

	    for package in $repository/*.rpm ; do
	        stamp=$repository/signed-stamps/$(basename $package).signed
		# is package newer than stamp ?
		if [ $package -nt $stamp ] ; then
		    packages="$packages $package"
		    stamps="$stamps $stamp"
		else
		    echo "Package $package already signed - skipped"
		fi
	    done
	    if [ -n "$packages" ] ; then
		echo | setsid rpm \
		    --define "_signature gpg" \
		    --define "_gpg_path /etc/planetlab" \
		    --define "_gpg_name $PLC_MAIL_SUPPORT_ADDRESS" \
		    --resign $packages && touch $stamps
		check
	    fi

	    # Update yum metadata. yum-arch createrepo sometimes leaves behind
	    # .oldheaders and .olddata directories accidentally.
	    rm -rf $repository/{.oldheaders,.olddata}
	    yum-arch $repository
	    check
	    createrepo -g yumgroups.xml $repository
	    check
	done

	result "$MESSAGE"
	;;
    clean)
	shift
	if [[ -z "$@" ]] ; then
	    # use all subdirs in install-rpms by default
	    repositories=/var/www/html/install-rpms/*
	else
	    # else use argv
	    repositories=$@
	fi

	for repository in $repositories ; do
	    rm -rf $repository/signed-stamps
	    rm -rf $repository/repodata
	    rm -rf $repository/headers
	done
	;;
    *)
        echo "Usage: $0 start|clean [repo ..]"
	;;
esac

exit $ERRORS
