#!/bin/bash
#
# priority: 900
#
# Configure cron jobs
#
# Mark Huang <mlhuang@cs.princeton.edu>
# Copyright (C) 2006 The Trustees of Princeton University
#
# $Id: crond,v 1.6 2006/12/12 22:23:04 mlhuang Exp $
#

# Source function library and configuration
. /etc/plc.d/functions
. /etc/planetlab/plc_config

# Be verbose
set -x

# Export so that we do not have to specify -p to psql invocations
export PGPORT=$PLC_DB_PORT

case "$1" in
    start)
	MESSAGE=$"Starting crond"
	dialog "$MESSAGE"

	if [ "$PLC_MAIL_ENABLED" = "1" ] ; then
	    MAILTO=$PLC_MAIL_SUPPORT_ADDRESS
	else
	    MAILTO=
	fi

	cat >/etc/cron.d/plc.cron <<EOF
SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=$MAILTO
HOME=/

# minute hour day-of-month month day-of-week user command
EOF

        # Run all jobs once at startup

	if [ "$PLC_BOOT_ENABLED" = "1" ] ; then
	    echo "*/5 * * * * root gen-slices-xml-05.py" >>/etc/cron.d/plc.cron
	    echo "*/15 * * * * root gen-sites-xml.py" >>/etc/cron.d/plc.cron
	    gen-slices-xml-05.py
	    check
	    gen-sites-xml.py
	    check
	fi

	if [ "$PLC_WWW_ENABLED" = "1" ] ; then
	    echo "*/15 * * * * root gen-static-content.py" >>/etc/cron.d/plc.cron
	    gen-static-content.py
	    check
	fi

	if [ "$PLC_DNS_ENABLED" = "1" ] ; then
	    echo "*/15 * * * * root dns-config" >>/etc/cron.d/plc.cron
	    dns-config
	    check
	fi

	if [ "$PLC_DB_ENABLED" = "1" ] ; then
	    echo "5 5 * * * root vacuumdb -U postgres --all --analyze --quiet" >>/etc/cron.d/plc.cron
	    vacuumdb -U postgres --all --analyze --quiet
	    check
	fi

	plc_daemon crond
	check

	result "$MESSAGE"	
	;;

    stop)
	MESSAGE=$"Stopping crond"
	dialog "$MESSAGE"

	killproc plc_crond
	check

	result "$MESSAGE"	
	;;
esac

exit $ERRORS
